apiVersion: v1
kind: Secret
metadata:
  name: alertagent-secrets
  namespace: alertagent
  labels:
    app.kubernetes.io/name: alertagent
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Base64编码的密钥，使用前请修改这些值
  # echo -n "your-strong-password" | base64
  mysql-root-password: eW91ci1zdHJvbmctcGFzc3dvcmQ=  # your-strong-password
  mysql-password: eW91ci1zdHJvbmctcGFzc3dvcmQ=        # your-strong-password
  redis-password: eW91ci1yZWRpcy1wYXNzd29yZA==        # your-redis-password
  jwt-secret: eW91ci1qd3Qtc2VjcmV0LWtleQ==            # your-jwt-secret-key

---
apiVersion: v1
kind: Secret
metadata:
  name: alertagent-tls
  namespace: alertagent
  labels:
    app.kubernetes.io/name: alertagent
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS证书和私钥 (Base64编码)
  # 使用以下命令生成自签名证书用于测试:
  # openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  #   -keyout tls.key -out tls.crt -subj "/CN=alertagent.local"
  # kubectl create secret tls alertagent-tls --cert=tls.crt --key=tls.key -n alertagent --dry-run=client -o yaml
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...  # 替换为实际证书
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...  # 替换为实际私钥