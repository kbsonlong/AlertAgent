apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      # Prometheus主容器
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=15d'
          - '--web.enable-lifecycle'
          - '--web.external-url=http://prometheus.example.com'
          - '--web.route-prefix=/'
          - '--log.level=info'
        ports:
        - name: web
          containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: rules-volume
          mountPath: /etc/prometheus/rules
        - name: storage-volume
          mountPath: /prometheus
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          timeoutSeconds: 5
      
      # 配置同步Sidecar容器
      - name: config-syncer
        image: alertagent/config-syncer:latest
        env:
        - name: ALERTAGENT_ENDPOINT
          value: "http://alertagent-service:8080"
        - name: CLUSTER_ID
          value: "prometheus-cluster-1"
        - name: CONFIG_TYPE
          value: "prometheus"
        - name: CONFIG_PATH
          value: "/etc/prometheus/prometheus.yml"
        - name: RELOAD_URL
          value: "http://localhost:9090/-/reload"
        - name: SYNC_INTERVAL
          value: "30s"
        - name: HTTP_TIMEOUT
          value: "30s"
        - name: MAX_RETRIES
          value: "3"
        - name: RETRY_BACKOFF
          value: "5s"
        - name: APP_ENV
          value: "production"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        ports:
        - name: metrics
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      
      # 规则同步Sidecar容器
      - name: rule-syncer
        image: alertagent/config-syncer:latest
        env:
        - name: ALERTAGENT_ENDPOINT
          value: "http://alertagent-service:8080"
        - name: CLUSTER_ID
          value: "prometheus-cluster-1"
        - name: CONFIG_TYPE
          value: "prometheus-rules"
        - name: CONFIG_PATH
          value: "/etc/prometheus/rules/"
        - name: RELOAD_URL
          value: "http://localhost:9090/-/reload"
        - name: SYNC_INTERVAL
          value: "60s"
        - name: HTTP_TIMEOUT
          value: "30s"
        - name: MAX_RETRIES
          value: "3"
        - name: RETRY_BACKOFF
          value: "5s"
        - name: APP_ENV
          value: "production"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: rules-volume
          mountPath: /etc/prometheus/rules
        ports:
        - name: metrics
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: rules-volume
        emptyDir: {}
      - name: storage-volume
        persistentVolumeClaim:
          claimName: prometheus-storage
      
      # 安全上下文
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      
      # 节点选择器（可选）
      nodeSelector:
        kubernetes.io/os: linux
      
      # 容忍度（可选）
      tolerations:
      - key: "monitoring"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
  labels:
    app: prometheus
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard